package baidumapsdk.demo.asmewill;import android.os.Bundle;import android.support.v7.app.AppCompatActivity;import android.view.View;import android.widget.LinearLayout;import android.widget.Toast;import com.baidu.mapapi.map.BaiduMap;import com.baidu.mapapi.map.MapStatus;import com.baidu.mapapi.map.MapStatusUpdate;import com.baidu.mapapi.map.MapStatusUpdateFactory;import com.baidu.mapapi.map.MapView;import com.baidu.mapapi.model.LatLng;import com.baidu.mapapi.overlayutil.WalkingRouteOverlay;import com.baidu.mapapi.search.core.SearchResult;import com.baidu.mapapi.search.route.BikingRouteResult;import com.baidu.mapapi.search.route.DrivingRouteResult;import com.baidu.mapapi.search.route.IndoorRouteResult;import com.baidu.mapapi.search.route.MassTransitRouteResult;import com.baidu.mapapi.search.route.OnGetRoutePlanResultListener;import com.baidu.mapapi.search.route.PlanNode;import com.baidu.mapapi.search.route.RoutePlanSearch;import com.baidu.mapapi.search.route.TransitRouteResult;import com.baidu.mapapi.search.route.WalkingRoutePlanOption;import com.baidu.mapapi.search.route.WalkingRouteResult;import baidumapsdk.demo.R;import butterknife.BindView;import butterknife.ButterKnife;/*** * app跳转百度地图 * http://lbsyun.baidu.com/index.php?title=uri/api/android * shuij * */public class MyRoutePlanActivity extends AppCompatActivity implements OnGetRoutePlanResultListener,View.OnClickListener{    @BindView(R.id.mapview_shop_map)    MapView mapView;    BaiduMap baiduMap;    @BindView(R.id.tv_daohang)    LinearLayout tv_daohang;    /**     * 步行路径规划     */    RoutePlanSearch mRoutePlanSearch=RoutePlanSearch.newInstance();    private double startLat=22.590164;    private double startLon=113.977696;    private double endLat=22.545682;    private double endLon=113.923962;    PlanNode stNode;    PlanNode enNode;    WalkingRoutePlanOption mPlanOption;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_route_plan);        ButterKnife.bind(this);        baiduMap=mapView.getMap();        mapView.getChildAt(2).setPadding(0, 0, 30, 90);//这是控制缩放控件的位置        /***         * 步行路径规划配置         */        mPlanOption=new WalkingRoutePlanOption();        stNode=PlanNode.withLocation(new LatLng(startLat,startLon));        enNode=PlanNode.withLocation(new LatLng(endLat,endLon));        mPlanOption.from(stNode).to(enNode);        mRoutePlanSearch.setOnGetRoutePlanResultListener(this);        mRoutePlanSearch.walkingSearch(mPlanOption);        tv_daohang.setOnClickListener(this);    }    @Override    public void onGetWalkingRouteResult(WalkingRouteResult result) {        if (result == null || result.error != SearchResult.ERRORNO.NO_ERROR) {            Toast.makeText(getApplicationContext(),"抱歉，未找到结果",Toast.LENGTH_LONG).show();        }        if (result.error == SearchResult.ERRORNO.AMBIGUOUS_ROURE_ADDR) {            //起终点或途经点地址有岐义，通过以下接口获取建议查询信息            result.getSuggestAddrInfo();            return;        }        if (result.error == SearchResult.ERRORNO.NO_ERROR) {            WalkingRouteOverlay overlay = new WalkingRouteOverlay(baiduMap);            baiduMap.setOnMarkerClickListener(overlay);            overlay.setData(result.getRouteLines().get(0));            overlay.addToMap();            overlay.zoomToSpan();            /**             * 修改比例尺             */            MapStatus mMapStatus = new MapStatus.Builder()                    .zoom(15)                    .build();            MapStatusUpdate mMapStatusUpdate = MapStatusUpdateFactory.newMapStatus(mMapStatus);            baiduMap.animateMapStatus(mMapStatusUpdate);        }    }    @Override    public void onGetTransitRouteResult(TransitRouteResult transitRouteResult) {    }    @Override    public void onGetMassTransitRouteResult(MassTransitRouteResult massTransitRouteResult) {    }    @Override    public void onGetDrivingRouteResult(DrivingRouteResult drivingRouteResult) {    }    @Override    public void onGetIndoorRouteResult(IndoorRouteResult indoorRouteResult) {    }    @Override    public void onGetBikingRouteResult(BikingRouteResult bikingRouteResult) {    }    @Override    public void onClick(View v) {        switch (v.getId()){            case R.id.tv_daohang:                Utils.mapWalkingDaoHang(this, stNode.getLocation().latitude + "", stNode.getLocation().longitude + "", "startAddress"                        , enNode.getLocation().latitude + "", enNode.getLocation().longitude + "", "endAddress",stNode.getCity());                break;        }    }}